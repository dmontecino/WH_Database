# WHeDB Manual {.unnumbered}


```{r, echo=FALSE}


# htmltools::div(
#   htmltools::img(src = knitr::image_uri("Pictures_and_diagrams/WHINlogo.png"),
#                  alt = 'logo', 
#                  style = 
#                  "position: fixed; 
#                  right: 10px; 
#                  top: 0%; 
#                  width: 220px;"),
#   htmltools::img(src = knitr::image_uri("Pictures_and_diagrams/WCS_LOGOTYPE.png"), 
#                  style = "position: fixed; right: 10px; top: 13%; width: 200px;"),
#   htmltools::img(src = knitr::image_uri("Pictures_and_diagrams/wcpa-logo.png"), 
#                  style = "position: fixed; right: 10px; top: 20%; width: 200px;")

htmltools::div(
  htmltools::a(
    href = "https://www.whin.org", target = "_blank",
    htmltools::img(src = knitr::image_uri("Pictures_and_diagrams/WHINlogo.png"),
                   alt = 'WHIN logo',  
                   style = "position: fixed; right: 10px; top: 0%; width: 220px;")
  ),
  htmltools::a(
    href = "https://www.wcs.org", target = "_blank",
    htmltools::img(src = knitr::image_uri("Pictures_and_diagrams/WCS_LOGOTYPE.png"),
                   alt = 'WCS logo',  
                   style = "position: fixed; right: 10px; top: 13%; width: 200px;")
  ),
  htmltools::a(
    href = "https://www.iucn.org/our-union/commissions/world-commission-protected-areas", target = "_blank",
    htmltools::img(src = knitr::image_uri("Pictures_and_diagrams/wcpa-logo.png"),
                   alt = 'WCPA logo',  
                   style = "position: fixed; right: 10px; top: 20%; width: 200px;")
  )
)


```

## The WildHealth Database – WHeDB

WHeDB stands for “WildHealth Database” and it is a user-friendly web-based database designed to manage wildlife health data.  Data in WHeDB are structured following a versatile data model created by the Wildlife Health Intelligence Network (WHIN), a recently global community of practice. WHeDB can effectively manage data generated by wildlife health surveillance systems, research, and initiatives by the public under one structure. Examples include typical morbidity/mortality investigations, opportunistic findings such as reports of dead animals by the public or in social media; testing of samples from captured, marked, and recaptured animals; multilevel study designs; observations during transect surveys, among others. WHeDB is maintained by Wildlife Conservation Society’s Health Program and Conservation Technology, based in Bronx, New York, United States.

In this manual, we **capitalize** nouns such as **Projects**, **Surveillance Activities**, **Field Visits**, **Locations**, **Events**, **Sources**, **Specimens**, and others when they refer to specific WHeDB units. 

This manual can also be found online [link](https://dmontecino.github.io/WH_Database/manual.html).

## Structure of the Wildlife Health Data in WHeDB

This manual provides a summary of the data structure in WHeDB. For a full description, visit the website describing the data model [link](https://dmontecino.github.io/WH_Database/data_model.html). Briefly, WHeDB has **Projects** that identify a specific leader under which **Surveillance Activities** are executed whose methodology is documented following a standard metadata format. **Surveillance Activities** are conducted through **Field Visits** that encompass a time period during which Locations (i.e. study sites) are surveyed. These **Locations** contain **Events**, epidemiological units with a spatiotemporal coordinate that can contain four types of Sources: groups of animals of the same species (**Group**), individual animals (**Animal**), collections of arthropods (**Arthropod**), or environmental sample collection (e.g., water or feces; **Environmental**). Sources a time *t* represent **Source Records** that can be obtained through a **Collection** that involves an effort to obtain information during an Event (i.e. Mist net) or not. **Locations**, **Events**, and **Sources** can be grouped in further temporal and spatial **Clusters** when needed, based on the specific requirements of a study design. What a **Location**, **Event**, and other **Cluster** units represent can vary for each **Surveillance Activity** but they must remain constant within a **Project** and documented. The four categories of **Sources** can provide **Specimens** cross-sectionally or longitudinally. Necropsy of animal carcasses can be documented. Live or dead Animals and **Specimens** can be tested using **Diagnostics** for biological (i.e. pathogens), physical (heat stroke), chemical (i.e. heavy metals), and physiological (i.e. cardiomegaly) targets. **Diagnostics** can be conducted in a Laboratory. **Specimens** and **Diagnostics** can generate new **Specimens** if they are pooled or if their products are used in subsequent tests, respectively. Finally, each **Diagnostic**, tested **Specimen**, and tested **Source** (directly or through Specimens) receives an **Interpretation** for the target of interest following documented case definitions. The data model also supports the administration of stored and exported **Specimens** and carcasses. 


![](Pictures_and_diagrams/Picture11.png){width=100%}
Figure 1. Basic structure of the Wildlife Health Intelligence Network data model.


Depending on the study design, it is possible that **Surveillance Activities** only contain **Field Visits** up to **Source Records** only (i.e. mortality observations). It is also possible that a **Surveillance Activity** contains **Specimens** and **Diagnostics** only or **Source Records**, **Specimens**, and **Diagnostics** only. In the first case, stored **Specimens** collected under a previous **Surveillance Activity** are used in a second **Surveillance Activity** and tested for health hazards. In the second case, a stored carcass collected under a previous **Surveillance Activity** generates new **Specimens** that are tested for health hazards. For other potential options please visit this website [link](https://dmontecino.github.io/WH_Database/data_model.html#surveillance-activities). The full set of relationships among these entities is provided [online](https://dmontecino.github.io/WH_Database/data_model.html#all-units-in-the-data-model-and-all-relationships).

The data model in WHeDB can be implemented in a modular approach, so components are added to a basic frame as needed depending on the methods employed to collected wildlife health data and the structure of the data. 

## Organization and User Accounts

### Organization Account

WHeDB compartmentalizes data in independent and password secured Organization accounts that belong to a specific Organization or to a specific individual. New Organization accounts must be requested to the database administrators (see below). Created Organization accounts are assigned an administrators as requested to the WHeDB administrators. 

### User Account

User accounts are also independent and password secured. They belong to a specific individual. New user accounts are requested to database administrators (see below). Created user accounts are granted access to specific Organization accounts as authorized by the Organization account administrators.

## Accessing the WildHealth Database

### Create an Organization Account

The first step to access WHeDB is to request an Organization account. All the data associated with Organization accounts are independent from other Organizations also using WHeDB. To request an Organization account, please click on **XXX** and complete the form. The individual requesting the Organization account will be reached out as soon as possible via email. 

**WHeDB is intended to be available and sustained as a public good to promote its usage. Critically, when local funding is unavailable, Global South users will be accommodated at no charge, subject to reasonable usage limits. Global South users with funding please be ready to inform your possibilities to support the database maintenance and the long term use of the database and data storage.**

An administrator account will be assigned to the Organization account based on the information provided in the form. Once the Organization account is created, the administrator can authorize access to specific user accounts. 

### Change an Organization Administrator Account

To change the Organization administrator account, click on **XXX** and complete the form. The individual requesting the Organization account will be reached out as soon as possible via email. 

### Create a User Account 

To request a user account, complete the information requested here **XXXX**. The user should get an email with the subject “WHeDB Access Request Confirmation”. An approved user, will receive a second email later with the subject “Your WHeDB Access Request Has Been Accepted”. This second email confirms the account is ready to use.

### Provide Access to Organization Accounts

Access to Organization accounts is restricted. For users to obtain access to Organization accounts they must be authorized by Organization account administrators. Organization account administrators can grant access to user account by following these steps: 

*Under construction* 

**Authorized users can be granted different permissions** to view, upload, edit, or delete different data in specific units of the Organization Account, from **Projects** to **Interpretations**. So users within an Organization can, for example view data in Project A; not have access at all to Project B; view, edit, or delete data in Project C; or view all data in Project D but only have editing permissions for Specimens and Diagnostics. 
To grant Project-, Unit-, and permit-specific authorizations, Organization account administrators must follow these steps:

*Under construction*

### Logging in to the Web-based User Interface

To access WHeDB, users with an approved account will open **XXXX** on a web browser, preferably Chrome and avoid Safari, and provide their username and password (see below). 

*Under construction*

# Navigating the WildHealth Database

## Initial Screen

Once the user has logged in, the Graphical User Interface (GUI) has two panels that are **always available**. On the left side of the screen, the GUI has a **Navigation Panel**:

![](Pictures_and_diagrams/Initial_screen.png){width=100%}

On the right side is the **Workspace** (green frame in the image below):

![](Pictures_and_diagrams/workspace.png){width=100%}
The area of the **Navigation Panel** and **Workspace** panels can be modified clicking on the bar separating the two areas (red frame in the figure below) and dragging it to the left or right. Compare the two images below:

![](Pictures_and_diagrams/initial_screen_2.png){width=100%}


![](Pictures_and_diagrams/initial_screen_3.png){width=100%}


The initial page, the **Navigation Panel**, and the **Workspace** can be scrolled up and down and left and right independently.

## The Navigation Panel

*Under construction*

<!-- The Field Visit requires an end date which can be placed in the future. For example, a Surveillance Activity aims to assess the body condition of a herd on a yearly for a decade. In this case, each Field Visit can encompass each full year, with an assigned start date of January 1st and en date December 31st of the corresponding year. The end date can be assigned in any moment before December 31st during the year, when the Field Visit is created. -->

<!-- ### 1. Finding Data  -->

<!-- #### Finding a Project -->
<!-- #### Finding a Surveillance Activity -->
<!-- #### Finding a Field Activity  -->
<!-- #### Finding a Location -->
<!-- #### Finding a Location Group -->
<!-- #### Finding an Event -->
<!-- #### Finding an Event Group -->
<!-- #### Finding a Source  -->
<!-- #### Finding a Source Record -->
<!-- #### Finding a Source Record Group -->
<!-- #### Finding a Carcass -->
<!-- #### Finding a Necropsy -->
<!-- #### Finding a Specimen -->
<!-- #### Finding a Diagnostic -->
<!-- #### Finding a Diagnosis -->
<!-- #### Finding a Laboratory -->
<!-- #### Finding a Person -->

<!-- ### 2. Writing data -->

<!-- #### Creating a new Project -->



<!-- ### 3. Export Data -->

## Appendices

### Summary of fields and tables whose availability is conditional on other fields of the database

```{r child="conditional_attrs.qmd" , echo=FALSE, eval=T, message=FALSE, cache=F}

```

